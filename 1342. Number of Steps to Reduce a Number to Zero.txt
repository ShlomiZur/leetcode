# python
# leetcode
# 1342. Number of Steps to Reduce a Number to Zero
# Given an integer num,
# return the number of steps to reduce it to zero.
# In one step, if the current number is even,
# you have to divide it by 2,
# otherwise, you have to subtract 1 from it.

# First solution:

"""
class Solution:
    def numberOfSteps(self, num: int) -> int:
        count = 0
        while (num != 0):
            if (num % 2 == 0):
                num = int (num / 2)
            else:
                num = num -1
            count = count + 1
        return count
"""

# Second solution:

class Solution:
    def numberOfSteps(self, num: int) -> int:
        if (num == 0):
            return 0
        if (num % 2 == 0):
            return 1 + self.numberOfSteps(int(num / 2))
        else:
             return 1 + self.numberOfSteps(num - 1)